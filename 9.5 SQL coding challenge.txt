CREATE TABLE Employees (
	Worker_ID serial PRIMARY KEY,
  	First_Name VARCHAR(30),
  	Last_Name VARCHAR(30),
  	Salary DECIMAL,
  	Joining_Date DATE,
  	Department VARCHAR(20)
);

INSERT INTO Employees (first_name, last_name, salary, joining_date, department) VALUES ('Rick', 'Smith', 100000.0, '2021-02-20 09:00:00', 'HR');
INSERT INTO Employees (first_name, last_name, salary, joining_date, department) VALUES ('Sam', 'Williams', 80000.0, '2021-06-11 09:00:00', 'Admin');
INSERT INTO Employees (first_name, last_name, salary, joining_date, department) VALUES ('John', 'Brown', 300000.0, '2021-02-20 09:00:00', 'HR');
INSERT INTO Employees (first_name, last_name, salary, joining_date, department) VALUES ('Amy', 'Jones', 500000.0, '2021-02-20 09:00:00', 'Admin');
INSERT INTO Employees (first_name, last_name, salary, joining_date, department) VALUES ('Sean', 'Garcia', 500000.0, '2021-06-11 09:00:00', 'Admin');
INSERT INTO Employees (first_name, last_name, salary, joining_date, department) VALUES ('Ryan', 'Miller', 200000.0, '2021-01-20 09:00:00', 'Account');
INSERT INTO Employees (first_name, last_name, salary, joining_date, department) VALUES ('Patty', 'Davis', 75000.0, '2021-01-20 09:00:00', 'Account');
INSERT INTO Employees (first_name, last_name, salary, joining_date, department) VALUES ('Monica', 'Rodriguez', 90000.0, '2021-04-11 09:00:00', 'Admin');

-- a) Write an SQL query to fetch worker names with salaries >= 50000 and <= 100000

SELECT first_name, last_name from employees where salary BETWEEN 50000.0 and 100000;

-- b) Write an SQL query to fetch the no. of workers for each department in the descending order.

SELECT department, count(*) from employees group by department order by Count(*) DESC;

-- c) Write an SQL query to fetch intersecting records of two tables.

select worker_id from employees intersect select worker_ref_id from bonus;

-- d) Write an SQL query to determine the 5th highest salary without using TOP or limit method.

select * from (select *, ROW_NUMBER () OVER (order by salary DESC) rowNum from employees) y where rowNum = 5;

